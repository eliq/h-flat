package posixok;

message Metadata {
	
	//////////////////////////////////////////
	// POSIX Metadata, declared required unless there's a reasonable default value
	//
	optional uint32	atime 		= 1     [default = 0];	// access time. gets updated on file access unless mounted with noatime
	required uint32	mtime		= 2;					// modify time. gets updated when file content is modified. 
	required uint32	ctime		= 3;					// change time. gets updated when the file attributes are changed AND when file content is modified. 
	required uint32	id_user		= 4;					
	required uint32	id_group	= 5;					
	required uint32 mode		= 6;
	optional uint32	link_count	= 7		[default = 1];	// number of names for this inode (hardlinks)
	optional uint32	size		= 8 	[default = 0];	// size in bytes
	optional uint32	blocks		= 9		[default = 0];	// allocated file system blocks

	message ExtendedAttribute {
		required string name  = 1; 
		optional string value = 2;
	}
	repeated ExtendedAttribute xattr = 10;

	//////////////////////////////////////////
	// Flat Namespace Metadata
	//
	message BlockIntervall {
		required uint32	start = 1;
		required uint32  end  = 2;
	}
	
	optional string 		data_unique_id 	= 11; 	// base-key to all data fields: we don't want to have to move data when we move metadata 
	repeated BlockIntervall data_keys		= 12; 	// tracking all allocated data-keys to support deletion of big files with holes without key-range requests
	

	//////////////////////////////////////////
	// Path Permission Metadata
	//
	enum ReachabilityType {
		UID 		= 0;
		GID 		= 1;
		UID_OR_GID 	= 2;
		NOT_UID    	= 3;
		NOT_GID    	= 4;
		GID_REQ_UID = 5;
	}
	message ReachabilityEntry {
		required ReachabilityType type = 1;
		optional uint32 gid			   = 2;
		optional uint32 uid			   = 3;
	}
	optional int64	path_permission_verified   = 13 [default = 0];		// pathmapdb version path permissions have been verified against
	repeated ReachabilityEntry path_permission = 14; 					// a set of reachability entries specifying the path permissions
	repeated ReachabilityEntry path_permission_children = 15;			// only for directories: store restrictions introduced by this directory so that children do not have to recompute
	
}